<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<default-servlet-handler />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.spring.shopping.controller" />

	<!-- <beans:import resource="applicationContext-jdbc.xml" /> -->
	<beans:import resource="applicationContext-jpa.xml" />

	<beans:bean id="cartService" class="com.spring.shopping.service.CartService" />

	<beans:bean id="paymentService"
		class="com.spring.shopping.service.PaymentServiceImpl" />

	<beans:bean id="addressService"
		class="com.spring.shopping.service.AddressServiceImpl" />

	<beans:bean id="customerService"
		class="com.spring.shopping.service.CustomerServiceImpl" />

	<beans:bean id="orderService"
		class="com.spring.shopping.service.OrderServiceImpl" />

	<beans:bean id="wishListService"
		class="com.spring.shopping.service.WishListServiceImpl" />

	<beans:bean id="reviewService"
		class="com.spring.shopping.service.ReviewServiceImpl" />

	<beans:bean id="cartData" class="com.spring.shopping.service.CartData" />

	<beans:bean id="mailSenderService"
		class="com.spring.shopping.service.MailSenderService" />

	<beans:bean id="categoryConfigRepository"
		class="com.spring.shopping.repository.impl.CategoryConfigRepositoryJdbcImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="categoryConfigurationService"
		class="com.spring.shopping.service.CategoryConfigServiceImpl" />

	<beans:bean id="productConfigurationService"
		class="com.spring.shopping.service.ProductConfigServiceImpl" />

	<beans:bean id="productConfigRepository"
		class="com.spring.shopping.repository.impl.ProductConfigRepositoryJdbcImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="customerRepository"
		class="com.spring.shopping.repository.impl.CustomerRepositoryJdbcImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="addressRepository"
		class="com.spring.shopping.repository.impl.AddressRepositoryJdbcImpl">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>

	<beans:bean id="paymentRepository"
		class="com.spring.shopping.repository.impl.PaymentRepositoryJdbcImpl">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>

	<beans:bean id="orderRepository"
		class="com.spring.shopping.repository.impl.OrderRepositoryJdbcImpl">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>

	<beans:bean id="wishListRepository"
		class="com.spring.shopping.repository.impl.WishListRepositoryJdbcImpl">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>

	<beans:bean id="reviewRepository"
		class="com.spring.shopping.repository.impl.ReviewRepositoryJdbcImpl">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>

	<!-- Declare Factory Bean to externalize the Mail Properties from Database -->
	<beans:bean id="mailProps"
		class="com.spring.shopping.repository.MailPropertiesFactoryBeanRepository">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="tableName" value="emaildetails" />
		<beans:property name="emailId" value="UserName" />
		<beans:property name="password" value="Password" />
	</beans:bean>

	<beans:bean id="javaMailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="info.demoproject" />
		<beans:property name="password" value="demoproject" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.ssl.trust">
					smtp.gmail.com
				</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">
					true
				</beans:prop>
				<beans:prop key="mail.smtp.auth">
					true
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
</beans:beans>
